"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("@controllers/auth.controller");
const validation_middleware_1 = require("@middlewares/validation.middleware");
const rateLimiter_middleware_1 = require("@middlewares/rateLimiter.middleware");
const auth_dto_1 = require("@dto/auth.dto");
const async_handler_1 = require("@utils/async-handler");
const auth_middleware_1 = require("@middlewares/auth.middleware");
const router = (0, express_1.Router)();
const authController = new auth_controller_1.AuthController();
router.post('/login', rateLimiter_middleware_1.authLimiter, (0, validation_middleware_1.validateDto)(auth_dto_1.LoginRequest), (0, async_handler_1.asyncHandler)(authController.login));
router.post('/refresh', (0, validation_middleware_1.validateDto)(auth_dto_1.RefreshTokenRequest), (0, async_handler_1.asyncHandler)(authController.refreshToken));
router.post('/logout', authController.logout);
router.post('/change-password', (0, auth_middleware_1.requireRoles)(['admin']), (0, validation_middleware_1.validateDto)(auth_dto_1.ChangePasswordRequest), (0, async_handler_1.asyncHandler)(authController.changePassword));
router.post('/reset-password', (0, validation_middleware_1.validateDto)(auth_dto_1.ResetPasswordRequest), (0, async_handler_1.asyncHandler)(authController.resetPassword));
router.get('/profile', (0, validation_middleware_1.validateDto)(auth_dto_1.UserProfileRequest), (0, async_handler_1.asyncHandler)(authController.getProfile));
router.post('/verify-token', (0, validation_middleware_1.validateDto)(auth_dto_1.VerifyTokenRequest), (0, async_handler_1.asyncHandler)(authController.verifyToken));
router.post('/unlock-account', (0, auth_middleware_1.requireRoles)(['admin']), (0, validation_middleware_1.validateDto)(auth_dto_1.UnlockAccountRequest), (0, async_handler_1.asyncHandler)(authController.unlockAccount));
exports.default = router;
//# sourceMappingURL=auth.routes.js.map